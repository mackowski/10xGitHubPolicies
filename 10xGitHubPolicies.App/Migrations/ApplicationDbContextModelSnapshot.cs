// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _10xGitHubPolicies.App.Data;

#nullable disable

namespace _10xGitHubPolicies.App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.ActionLog", b =>
                {
                    b.Property<int>("ActionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionLogId"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ActionLogId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("RepositoryId");

                    b.ToTable("ActionsLogs");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PolicyId");

                    b.HasIndex("PolicyKey")
                        .IsUnique();

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.PolicyViolation", b =>
                {
                    b.Property<int>("ViolationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViolationId"));

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.Property<int>("ScanId")
                        .HasColumnType("int");

                    b.HasKey("ViolationId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("RepositoryId");

                    b.HasIndex("ScanId", "RepositoryId", "PolicyId")
                        .IsUnique();

                    b.ToTable("PolicyViolations");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.Repository", b =>
                {
                    b.Property<int>("RepositoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepositoryId"));

                    b.Property<string>("ComplianceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GitHubRepositoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastScannedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RepositoryId");

                    b.HasIndex("GitHubRepositoryId")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.Scan", b =>
                {
                    b.Property<int>("ScanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScanId"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScanId");

                    b.ToTable("Scans");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.ActionLog", b =>
                {
                    b.HasOne("_10xGitHubPolicies.App.Data.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xGitHubPolicies.App.Data.Entities.Repository", "Repository")
                        .WithMany()
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("_10xGitHubPolicies.App.Data.Entities.PolicyViolation", b =>
                {
                    b.HasOne("_10xGitHubPolicies.App.Data.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xGitHubPolicies.App.Data.Entities.Repository", "Repository")
                        .WithMany()
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_10xGitHubPolicies.App.Data.Entities.Scan", "Scan")
                        .WithMany()
                        .HasForeignKey("ScanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("Repository");

                    b.Navigation("Scan");
                });
#pragma warning restore 612, 618
        }
    }
}
